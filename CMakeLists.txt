# this is the build file for project leetcode-treenode-cpp
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(leetcode-treenode-cpp LANGUAGES CXX C)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(add-two-integers STATIC "")
set_target_properties(add-two-integers PROPERTIES OUTPUT_NAME "add-two-integers")
set_target_properties(add-two-integers PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_add-two-integers_D212C6D2
    COMMAND echo [  0%]: compiling.module.release leetcode_test.add_two_integers.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/add-two-integers/windows/x64/release/add-two-integers
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/add-two-integers/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.add_two_integers.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/add-two-integers/windows/x64/release/add-two-integers/index.ixx.obj
    VERBATIM
)
add_custom_target(target_add-two-integers_D212C6D2
    DEPENDS output_add-two-integers_D212C6D2
)
add_dependencies(add-two-integers target_add-two-integers_D212C6D2)
target_compile_options(add-two-integers PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(add-two-integers PRIVATE /EHsc)
else()
    target_compile_options(add-two-integers PRIVATE -fcxx-exceptions)
endif()
set_target_properties(add-two-integers PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(add-two-integers PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(add-two-integers PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(add-two-integers PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(add-two-integers PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET add-two-integers PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(add-two-integers PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/add-two-integers/windows/x64/release/add-two-integers/index.ixx.obj
)
target_link_options(add-two-integers PRIVATE
    -m64
)
target_sources(add-two-integers PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(animal-shelter-lcci STATIC "")
set_target_properties(animal-shelter-lcci PROPERTIES OUTPUT_NAME "animal-shelter-lcci")
set_target_properties(animal-shelter-lcci PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_animal-shelter-lcci_E58AFE49
    COMMAND echo [  0%]: compiling.module.release leetcode_test.animal_shelter_lcci.AnimalShelf
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/animal-shelter-lcci/windows/x64/release/animal-shelter-lcci
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/animal-shelter-lcci/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/animal-shelter-lcci/windows/x64/release/rules/modules/cache/77ed3856/leetcode_test.animal_shelter_lcci.AnimalShelf.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/animal-shelter-lcci/windows/x64/release/animal-shelter-lcci/index.ixx.obj
    VERBATIM
)
add_custom_target(target_animal-shelter-lcci_E58AFE49
    DEPENDS output_animal-shelter-lcci_E58AFE49
)
add_dependencies(animal-shelter-lcci target_animal-shelter-lcci_E58AFE49)
target_compile_options(animal-shelter-lcci PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(animal-shelter-lcci PRIVATE /EHsc)
else()
    target_compile_options(animal-shelter-lcci PRIVATE -fcxx-exceptions)
endif()
set_target_properties(animal-shelter-lcci PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(animal-shelter-lcci PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(animal-shelter-lcci PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(animal-shelter-lcci PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(animal-shelter-lcci PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET animal-shelter-lcci PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(animal-shelter-lcci PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/animal-shelter-lcci/windows/x64/release/animal-shelter-lcci/index.ixx.obj
)
target_link_options(animal-shelter-lcci PRIVATE
    -m64
)
target_sources(animal-shelter-lcci PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(calculate-delayed-arrival-time STATIC "")
set_target_properties(calculate-delayed-arrival-time PROPERTIES OUTPUT_NAME "calculate-delayed-arrival-time")
set_target_properties(calculate-delayed-arrival-time PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_calculate-delayed-arrival-time_ECAD74AB
    COMMAND echo [  0%]: compiling.module.release leetcode_test.calculate_delayed_arrival_time.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/calculate-delayed-arrival-time/windows/x64/release/calculate-delayed-arrival-time
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/calculate-delayed-arrival-time/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/calculate-delayed-arrival-time/windows/x64/release/rules/modules/cache/6d5e83f0/leetcode_test.calculate_delayed_arrival_time.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/calculate-delayed-arrival-time/windows/x64/release/calculate-delayed-arrival-time/index.ixx.obj
    VERBATIM
)
add_custom_target(target_calculate-delayed-arrival-time_ECAD74AB
    DEPENDS output_calculate-delayed-arrival-time_ECAD74AB
)
add_dependencies(calculate-delayed-arrival-time target_calculate-delayed-arrival-time_ECAD74AB)
target_compile_options(calculate-delayed-arrival-time PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(calculate-delayed-arrival-time PRIVATE /EHsc)
else()
    target_compile_options(calculate-delayed-arrival-time PRIVATE -fcxx-exceptions)
endif()
set_target_properties(calculate-delayed-arrival-time PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(calculate-delayed-arrival-time PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(calculate-delayed-arrival-time PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(calculate-delayed-arrival-time PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(calculate-delayed-arrival-time PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET calculate-delayed-arrival-time PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(calculate-delayed-arrival-time PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/calculate-delayed-arrival-time/windows/x64/release/calculate-delayed-arrival-time/index.ixx.obj
)
target_link_options(calculate-delayed-arrival-time PRIVATE
    -m64
)
target_sources(calculate-delayed-arrival-time PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_executable(check-if-it-is-a-good-array-test "")
set_target_properties(check-if-it-is-a-good-array-test PROPERTIES OUTPUT_NAME "check-if-it-is-a-good-array-test")
set_target_properties(check-if-it-is-a-good-array-test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_check-if-it-is-a-good-array-test_5254BD8D
    COMMAND echo [  0%]: compiling.module.release leetcode_test.check_if_it_is_a_good_array.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/check-if-it-is-a-good-array-test/windows/x64/release/check-if-it-is-a-good-array
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/check-if-it-is-a-good-array-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.check_if_it_is_a_good_array.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/check-if-it-is-a-good-array-test/windows/x64/release/check-if-it-is-a-good-array/index.ixx.obj
    VERBATIM
)
add_custom_target(target_check-if-it-is-a-good-array-test_5254BD8D
    DEPENDS output_check-if-it-is-a-good-array-test_5254BD8D
)
add_dependencies(check-if-it-is-a-good-array-test target_check-if-it-is-a-good-array-test_5254BD8D)
target_include_directories(check-if-it-is-a-good-array-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include
)
target_compile_options(check-if-it-is-a-good-array-test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_source_files_properties(${CMAKE_SOURCE_DIR}/check-if-it-is-a-good-array/test.cpp PROPERTIES COMPILE_OPTIONS
    "$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.check_if_it_is_a_good_array.Solution=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.check_if_it_is_a_good_array.Solution.pcm>"
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(check-if-it-is-a-good-array-test PRIVATE /EHsc)
else()
    target_compile_options(check-if-it-is-a-good-array-test PRIVATE -fcxx-exceptions)
endif()
set_target_properties(check-if-it-is-a-good-array-test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(check-if-it-is-a-good-array-test PRIVATE cxx_std_20)
if(MSVC)
    set_property(TARGET check-if-it-is-a-good-array-test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(check-if-it-is-a-good-array-test PRIVATE
    gmock
    gtest
    gmock_main
    gtest_main
)
target_link_libraries(check-if-it-is-a-good-array-test PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/check-if-it-is-a-good-array-test/windows/x64/release/check-if-it-is-a-good-array/index.ixx.obj
)
target_link_directories(check-if-it-is-a-good-array-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib/manual-link
)
target_link_options(check-if-it-is-a-good-array-test PRIVATE
    -m64
)
target_sources(check-if-it-is-a-good-array-test PRIVATE
    check-if-it-is-a-good-array/test.cpp
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(complement-of-base-10-integer STATIC "")
set_target_properties(complement-of-base-10-integer PROPERTIES OUTPUT_NAME "complement-of-base-10-integer")
set_target_properties(complement-of-base-10-integer PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_complement-of-base-10-integer_152F48E9
    COMMAND echo [  0%]: compiling.module.release leetcode_test.complement_of_base_10_integer.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/complement-of-base-10-integer/windows/x64/release/complement-of-base-10-integer
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/complement-of-base-10-integer/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/complement-of-base-10-integer/windows/x64/release/rules/modules/cache/111f28b3/leetcode_test.complement_of_base_10_integer.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/complement-of-base-10-integer/windows/x64/release/complement-of-base-10-integer/index.ixx.obj
    VERBATIM
)
add_custom_target(target_complement-of-base-10-integer_152F48E9
    DEPENDS output_complement-of-base-10-integer_152F48E9
)
add_dependencies(complement-of-base-10-integer target_complement-of-base-10-integer_152F48E9)
target_compile_options(complement-of-base-10-integer PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(complement-of-base-10-integer PRIVATE /EHsc)
else()
    target_compile_options(complement-of-base-10-integer PRIVATE -fcxx-exceptions)
endif()
set_target_properties(complement-of-base-10-integer PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(complement-of-base-10-integer PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(complement-of-base-10-integer PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(complement-of-base-10-integer PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(complement-of-base-10-integer PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET complement-of-base-10-integer PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(complement-of-base-10-integer PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/complement-of-base-10-integer/windows/x64/release/complement-of-base-10-integer/index.ixx.obj
)
target_link_options(complement-of-base-10-integer PRIVATE
    -m64
)
target_sources(complement-of-base-10-integer PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(construct-quad-tree STATIC "")
set_target_properties(construct-quad-tree PROPERTIES OUTPUT_NAME "construct-quad-tree")
set_target_properties(construct-quad-tree PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_construct-quad-tree_CF9D621A
    COMMAND echo [  0%]: compiling.module.release leetcode_test.construct_quad_tree.Node
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/construct-quad-tree/windows/x64/release/construct-quad-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/construct-quad-tree/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.construct_quad_tree.Node.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/construct-quad-tree/windows/x64/release/construct-quad-tree/Node.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.construct_quad_tree.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/construct-quad-tree/windows/x64/release/construct-quad-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/construct-quad-tree/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.construct_quad_tree.Node=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.construct_quad_tree.Node.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.construct_quad_tree.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/construct-quad-tree/windows/x64/release/construct-quad-tree/index.ixx.obj
    VERBATIM
)
add_custom_target(target_construct-quad-tree_CF9D621A
    DEPENDS output_construct-quad-tree_CF9D621A
)
add_dependencies(construct-quad-tree target_construct-quad-tree_CF9D621A)
target_compile_options(construct-quad-tree PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(construct-quad-tree PRIVATE /EHsc)
else()
    target_compile_options(construct-quad-tree PRIVATE -fcxx-exceptions)
endif()
set_target_properties(construct-quad-tree PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(construct-quad-tree PRIVATE cxx_std_20)
if(MSVC)
    set_property(TARGET construct-quad-tree PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(construct-quad-tree PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/construct-quad-tree/windows/x64/release/construct-quad-tree/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/construct-quad-tree/windows/x64/release/construct-quad-tree/Node.ixx.obj
)
target_link_options(construct-quad-tree PRIVATE
    -m64
)
target_sources(construct-quad-tree PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(design-linked-list STATIC "")
set_target_properties(design-linked-list PROPERTIES OUTPUT_NAME "design-linked-list")
set_target_properties(design-linked-list PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_design-linked-list_9362C355
    COMMAND echo [  0%]: compiling.module.release leetcode_test.design_linked_list.MyLinkedList
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/design-linked-list/windows/x64/release/design-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/design-linked-list/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.design_linked_list.MyLinkedList.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/design-linked-list/windows/x64/release/design-linked-list/index.ixx.obj
    VERBATIM
)
add_custom_target(target_design-linked-list_9362C355
    DEPENDS output_design-linked-list_9362C355
)
add_dependencies(design-linked-list target_design-linked-list_9362C355)
target_compile_options(design-linked-list PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(design-linked-list PRIVATE /EHsc)
else()
    target_compile_options(design-linked-list PRIVATE -fcxx-exceptions)
endif()
set_target_properties(design-linked-list PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(design-linked-list PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(design-linked-list PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(design-linked-list PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(design-linked-list PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET design-linked-list PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(design-linked-list PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/design-linked-list/windows/x64/release/design-linked-list/index.ixx.obj
)
target_link_options(design-linked-list PRIVATE
    -m64
)
target_sources(design-linked-list PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_executable(design-linked-list-test "")
set_target_properties(design-linked-list-test PROPERTIES OUTPUT_NAME "design-linked-list-test")
set_target_properties(design-linked-list-test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_dependencies(design-linked-list-test design-linked-list)
target_include_directories(design-linked-list-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include
)
target_compile_options(design-linked-list-test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_source_files_properties(${CMAKE_SOURCE_DIR}/design-linked-list/test.cpp PROPERTIES COMPILE_OPTIONS
    "$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.design_linked_list.MyLinkedList=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.design_linked_list.MyLinkedList.pcm>"
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(design-linked-list-test PRIVATE /EHsc)
else()
    target_compile_options(design-linked-list-test PRIVATE -fcxx-exceptions)
endif()
set_target_properties(design-linked-list-test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(design-linked-list-test PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(design-linked-list-test PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(design-linked-list-test PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(design-linked-list-test PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET design-linked-list-test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(design-linked-list-test PRIVATE
    gmock
    gtest
    gmock_main
    gtest_main
    design-linked-list
)
target_link_directories(design-linked-list-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib/manual-link
    build/windows/x64/release
)
target_link_options(design-linked-list-test PRIVATE
    -m64
)
target_sources(design-linked-list-test PRIVATE
    design-linked-list/test.cpp
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(design-skiplist STATIC "")
set_target_properties(design-skiplist PROPERTIES OUTPUT_NAME "design-skiplist")
set_target_properties(design-skiplist PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_design-skiplist_96443C45
    COMMAND echo [  0%]: compiling.module.release leetcode_test.design_skiplist.Skiplist
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/design-skiplist/windows/x64/release/design-skiplist
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/design-skiplist/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/design-skiplist/windows/x64/release/rules/modules/cache/57cc73b0/leetcode_test.design_skiplist.Skiplist.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/design-skiplist/windows/x64/release/design-skiplist/index.ixx.obj
    VERBATIM
)
add_custom_target(target_design-skiplist_96443C45
    DEPENDS output_design-skiplist_96443C45
)
add_dependencies(design-skiplist target_design-skiplist_96443C45)
target_compile_options(design-skiplist PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(design-skiplist PRIVATE /EHsc)
else()
    target_compile_options(design-skiplist PRIVATE -fcxx-exceptions)
endif()
set_target_properties(design-skiplist PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(design-skiplist PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(design-skiplist PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(design-skiplist PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(design-skiplist PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET design-skiplist PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(design-skiplist PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/design-skiplist/windows/x64/release/design-skiplist/index.ixx.obj
)
target_link_options(design-skiplist PRIVATE
    -m64
)
target_sources(design-skiplist PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(frog-jump-ii STATIC "")
set_target_properties(frog-jump-ii PROPERTIES OUTPUT_NAME "frog-jump-ii")
set_target_properties(frog-jump-ii PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_frog-jump-ii_430A2F6E
    COMMAND echo [  0%]: compiling.module.release leetcode_test.frog_jump_ii.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/frog-jump-ii/windows/x64/release/frog-jump-ii
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/frog-jump-ii/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.frog_jump_ii.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/frog-jump-ii/windows/x64/release/frog-jump-ii/index.ixx.obj
    VERBATIM
)
add_custom_target(target_frog-jump-ii_430A2F6E
    DEPENDS output_frog-jump-ii_430A2F6E
)
add_dependencies(frog-jump-ii target_frog-jump-ii_430A2F6E)
target_compile_options(frog-jump-ii PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(frog-jump-ii PRIVATE /EHsc)
else()
    target_compile_options(frog-jump-ii PRIVATE -fcxx-exceptions)
endif()
set_target_properties(frog-jump-ii PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(frog-jump-ii PRIVATE cxx_std_20)
if(MSVC)
    set_property(TARGET frog-jump-ii PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(frog-jump-ii PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/frog-jump-ii/windows/x64/release/frog-jump-ii/index.ixx.obj
)
target_link_options(frog-jump-ii PRIVATE
    -m64
)
target_sources(frog-jump-ii PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_executable(ibonacci-number-test "")
set_target_properties(ibonacci-number-test PROPERTIES OUTPUT_NAME "ibonacci-number-test")
set_target_properties(ibonacci-number-test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_ibonacci-number-test_C6FE2A95
    COMMAND echo [  0%]: compiling.module.release leetcode_test.fibonacci_number.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/ibonacci-number-test/windows/x64/release/fibonacci-number
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/ibonacci-number-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.fibonacci_number.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/ibonacci-number-test/windows/x64/release/fibonacci-number/index.ixx.obj
    VERBATIM
)
add_custom_target(target_ibonacci-number-test_C6FE2A95
    DEPENDS output_ibonacci-number-test_C6FE2A95
)
add_dependencies(ibonacci-number-test target_ibonacci-number-test_C6FE2A95)
target_include_directories(ibonacci-number-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include
)
target_compile_options(ibonacci-number-test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_source_files_properties(${CMAKE_SOURCE_DIR}/fibonacci-number/test.cpp PROPERTIES COMPILE_OPTIONS
    "$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.fibonacci_number.Solution=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.fibonacci_number.Solution.pcm>"
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(ibonacci-number-test PRIVATE /EHsc)
else()
    target_compile_options(ibonacci-number-test PRIVATE -fcxx-exceptions)
endif()
set_target_properties(ibonacci-number-test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(ibonacci-number-test PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(ibonacci-number-test PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(ibonacci-number-test PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(ibonacci-number-test PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET ibonacci-number-test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ibonacci-number-test PRIVATE
    gmock
    gtest
    gmock_main
    gtest_main
)
target_link_libraries(ibonacci-number-test PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/ibonacci-number-test/windows/x64/release/fibonacci-number/index.ixx.obj
)
target_link_directories(ibonacci-number-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib/manual-link
)
target_link_options(ibonacci-number-test PRIVATE
    -m64
)
target_sources(ibonacci-number-test PRIVATE
    fibonacci-number/test.cpp
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(implement-trie-prefix-tree STATIC "")
set_target_properties(implement-trie-prefix-tree PROPERTIES OUTPUT_NAME "implement-trie-prefix-tree")
set_target_properties(implement-trie-prefix-tree PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_implement-trie-prefix-tree_A58B5EA7
    COMMAND echo [  0%]: compiling.module.release leetcode_test.implement_trie_prefix_tree.Trie
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/implement-trie-prefix-tree/windows/x64/release/implement-trie-prefix-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/implement-trie-prefix-tree/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/implement-trie-prefix-tree/windows/x64/release/rules/modules/cache/3c3693be/leetcode_test.implement_trie_prefix_tree.Trie.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/implement-trie-prefix-tree/windows/x64/release/implement-trie-prefix-tree/index.ixx.obj
    VERBATIM
)
add_custom_target(target_implement-trie-prefix-tree_A58B5EA7
    DEPENDS output_implement-trie-prefix-tree_A58B5EA7
)
add_dependencies(implement-trie-prefix-tree target_implement-trie-prefix-tree_A58B5EA7)
target_compile_options(implement-trie-prefix-tree PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(implement-trie-prefix-tree PRIVATE /EHsc)
else()
    target_compile_options(implement-trie-prefix-tree PRIVATE -fcxx-exceptions)
endif()
set_target_properties(implement-trie-prefix-tree PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(implement-trie-prefix-tree PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(implement-trie-prefix-tree PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(implement-trie-prefix-tree PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(implement-trie-prefix-tree PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET implement-trie-prefix-tree PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(implement-trie-prefix-tree PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/implement-trie-prefix-tree/windows/x64/release/implement-trie-prefix-tree/index.ixx.obj
)
target_link_options(implement-trie-prefix-tree PRIVATE
    -m64
)
target_sources(implement-trie-prefix-tree PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_executable(insert-into-a-binary-search-tree-test "")
set_target_properties(insert-into-a-binary-search-tree-test PROPERTIES OUTPUT_NAME "insert-into-a-binary-search-tree-test")
set_target_properties(insert-into-a-binary-search-tree-test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_insert-into-a-binary-search-tree-test_B2153D46
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.TreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/TreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.traversalTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.traversalTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/traversalTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.serializeTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.serializeTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/serializeTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.freeTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.freeTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/freeTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.parseLeetCodeBinaryTree
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.freeTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.freeTreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.parseLeetCodeBinaryTree.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/parseLeetCodeBinaryTree.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.bfsTravelsal
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.bfsTravelsal.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/bfsTravelsal.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.LeetCodeTreeNodeToString
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.bfsTravelsal=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.bfsTravelsal.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.LeetCodeTreeNodeToString.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/LeetCodeTreeNodeToString.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.PostOrderTraversal
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.PostOrderTraversal.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/PostOrderTraversal.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.HashTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.HashTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/HashTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.EqualTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.EqualTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/EqualTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.debugTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.debugTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/debugTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.printTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insert-into-a-binary-search-tree-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insert_into_a_binary_search_tree.debugTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.debugTreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.printTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/printTreeNode.ixx.obj
    VERBATIM
)
add_custom_target(target_insert-into-a-binary-search-tree-test_B2153D46
    DEPENDS output_insert-into-a-binary-search-tree-test_B2153D46
)
add_dependencies(insert-into-a-binary-search-tree-test target_insert-into-a-binary-search-tree-test_B2153D46)
target_include_directories(insert-into-a-binary-search-tree-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include
)
target_compile_options(insert-into-a-binary-search-tree-test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_source_files_properties(${CMAKE_SOURCE_DIR}/insert-into-a-binary-search-tree/test.cpp PROPERTIES COMPILE_OPTIONS
    "$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.parseLeetCodeBinaryTree=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.parseLeetCodeBinaryTree.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insert_into_a_binary_search_tree.printTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.printTreeNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insert_into_a_binary_search_tree.Solution=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.Solution.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insert_into_a_binary_search_tree.PostOrderTraversal=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.PostOrderTraversal.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.freeTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.freeTreeNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insert_into_a_binary_search_tree.HashTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.HashTreeNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.LeetCodeTreeNodeToString=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.LeetCodeTreeNodeToString.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.serializeTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.serializeTreeNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insert_into_a_binary_search_tree.EqualTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.EqualTreeNode.pcm>"
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(insert-into-a-binary-search-tree-test PRIVATE /EHsc)
else()
    target_compile_options(insert-into-a-binary-search-tree-test PRIVATE -fcxx-exceptions)
endif()
set_target_properties(insert-into-a-binary-search-tree-test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(insert-into-a-binary-search-tree-test PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(insert-into-a-binary-search-tree-test PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(insert-into-a-binary-search-tree-test PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(insert-into-a-binary-search-tree-test PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET insert-into-a-binary-search-tree-test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(insert-into-a-binary-search-tree-test PRIVATE
    cppunit
)
target_link_libraries(insert-into-a-binary-search-tree-test PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/debugTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/EqualTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/HashTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/PostOrderTraversal.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/insert-into-a-binary-search-tree/printTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/bfsTravelsal.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/freeTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/LeetCodeTreeNodeToString.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/parseLeetCodeBinaryTree.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/serializeTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/traversalTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insert-into-a-binary-search-tree-test/windows/x64/release/leetcode-treenode-cpp/TreeNode.ixx.obj
)
target_link_directories(insert-into-a-binary-search-tree-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib
)
target_link_options(insert-into-a-binary-search-tree-test PRIVATE
    -m64
)
target_sources(insert-into-a-binary-search-tree-test PRIVATE
    insert-into-a-binary-search-tree/test.cpp
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_executable(insufficient-nodes-in-root-to-leaf-paths-test "")
set_target_properties(insufficient-nodes-in-root-to-leaf-paths-test PROPERTIES OUTPUT_NAME "insufficient-nodes-in-root-to-leaf-paths-test")
set_target_properties(insufficient-nodes-in-root-to-leaf-paths-test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_insufficient-nodes-in-root-to-leaf-paths-test_53A58AB4
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.TreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/TreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.traversalTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.traversalTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/traversalTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.serializeTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.serializeTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/serializeTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.freeTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.freeTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/freeTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.parseLeetCodeBinaryTree
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.freeTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.freeTreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.parseLeetCodeBinaryTree.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/parseLeetCodeBinaryTree.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.bfsTravelsal
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.bfsTravelsal.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/bfsTravelsal.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.LeetCodeTreeNodeToString
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.bfsTravelsal=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.bfsTravelsal.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.LeetCodeTreeNodeToString.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/LeetCodeTreeNodeToString.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insufficient_nodes_in_root_to_leaf_paths.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insufficient_nodes_in_root_to_leaf_paths.debugTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.debugTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/debugTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insufficient_nodes_in_root_to_leaf_paths.printTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.debugTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.debugTreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.printTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/printTreeNode.ixx.obj
    VERBATIM
)
add_custom_target(target_insufficient-nodes-in-root-to-leaf-paths-test_53A58AB4
    DEPENDS output_insufficient-nodes-in-root-to-leaf-paths-test_53A58AB4
)
add_dependencies(insufficient-nodes-in-root-to-leaf-paths-test target_insufficient-nodes-in-root-to-leaf-paths-test_53A58AB4)
target_include_directories(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include
)
target_compile_options(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_source_files_properties(${CMAKE_SOURCE_DIR}/insufficient-nodes-in-root-to-leaf-paths/test.cpp PROPERTIES COMPILE_OPTIONS
    "$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.parseLeetCodeBinaryTree=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.parseLeetCodeBinaryTree.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.Solution=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.Solution.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.LeetCodeTreeNodeToString=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.LeetCodeTreeNodeToString.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.traversalTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.traversalTreeNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.printTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.printTreeNode.pcm>"
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE /EHsc)
else()
    target_compile_options(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE -fcxx-exceptions)
endif()
set_target_properties(insufficient-nodes-in-root-to-leaf-paths-test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET insufficient-nodes-in-root-to-leaf-paths-test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE
    gmock
    gtest
    gmock_main
    gtest_main
)
target_link_libraries(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/printTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/debugTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/bfsTravelsal.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/freeTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/LeetCodeTreeNodeToString.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/parseLeetCodeBinaryTree.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/serializeTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/traversalTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/insufficient-nodes-in-root-to-leaf-paths-test/windows/x64/release/leetcode-treenode-cpp/TreeNode.ixx.obj
)
target_link_directories(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib/manual-link
)
target_link_options(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE
    -m64
)
target_sources(insufficient-nodes-in-root-to-leaf-paths-test PRIVATE
    insufficient-nodes-in-root-to-leaf-paths/test.cpp
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(largest-rectangle-in-histogram STATIC "")
set_target_properties(largest-rectangle-in-histogram PROPERTIES OUTPUT_NAME "largest-rectangle-in-histogram")
set_target_properties(largest-rectangle-in-histogram PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_largest-rectangle-in-histogram_A39FC39A
    COMMAND echo [  0%]: compiling.module.release leetcode_test.largest_rectangle_in_histogram.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/largest-rectangle-in-histogram/windows/x64/release/largest-rectangle-in-histogram
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/largest-rectangle-in-histogram/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/largest-rectangle-in-histogram/windows/x64/release/rules/modules/cache/4f805c56/leetcode_test.largest_rectangle_in_histogram.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/largest-rectangle-in-histogram/windows/x64/release/largest-rectangle-in-histogram/index.ixx.obj
    VERBATIM
)
add_custom_target(target_largest-rectangle-in-histogram_A39FC39A
    DEPENDS output_largest-rectangle-in-histogram_A39FC39A
)
add_dependencies(largest-rectangle-in-histogram target_largest-rectangle-in-histogram_A39FC39A)
target_compile_options(largest-rectangle-in-histogram PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(largest-rectangle-in-histogram PRIVATE /EHsc)
else()
    target_compile_options(largest-rectangle-in-histogram PRIVATE -fcxx-exceptions)
endif()
set_target_properties(largest-rectangle-in-histogram PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(largest-rectangle-in-histogram PRIVATE cxx_std_20)
if(MSVC)
    set_property(TARGET largest-rectangle-in-histogram PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(largest-rectangle-in-histogram PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/largest-rectangle-in-histogram/windows/x64/release/largest-rectangle-in-histogram/index.ixx.obj
)
target_link_options(largest-rectangle-in-histogram PRIVATE
    -m64
)
target_sources(largest-rectangle-in-histogram PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(leetcode-test STATIC "")
set_target_properties(leetcode-test PROPERTIES OUTPUT_NAME "leetcode-test")
set_target_properties(leetcode-test PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_leetcode-test_35701997
    COMMAND echo [  0%]: compiling.module.release leetcode_test.valid_perfect_square.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/valid-perfect-square
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.valid_perfect_square.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/valid-perfect-square/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.sum_multiples.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/sum-multiples
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/sum-multiples/windows/x64/release/rules/modules/cache/c659aa27/leetcode_test.sum_multiples.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/sum-multiples/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.split_a_circular_linked_list.ListNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list/ListNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.split_a_circular_linked_list.TraversalCircularListNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.ListNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.TraversalCircularListNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list/TraversalCircularListNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.split_a_circular_linked_list.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.ListNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.split_a_circular_linked_list.CircularLinkedListToArray
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.ListNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.CircularLinkedListToArray.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list/CircularLinkedListToArray.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.split_a_circular_linked_list.ArrayToCircularLinkedList
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.ListNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ArrayToCircularLinkedList.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list/ArrayToCircularLinkedList.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.ransom_note.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/ransom-note
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.ransom_note.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/ransom-note/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.number_complement.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/number-complement
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.number_complement.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/number-complement/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.maximum_sum_with_exactly_k_elements.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/maximum-sum-with-exactly-k-elements
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.maximum_sum_with_exactly_k_elements.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/maximum-sum-with-exactly-k-elements/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.TreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/TreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.traversalTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.traversalTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/traversalTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.serializeTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.serializeTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/serializeTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.freeTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.freeTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/freeTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.parseLeetCodeBinaryTree
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.freeTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.freeTreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.parseLeetCodeBinaryTree.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/parseLeetCodeBinaryTree.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.bfsTravelsal
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.bfsTravelsal.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/bfsTravelsal.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.LeetCodeTreeNodeToString
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.bfsTravelsal=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.bfsTravelsal.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.LeetCodeTreeNodeToString.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/LeetCodeTreeNodeToString.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.largest_rectangle_in_histogram.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/largest-rectangle-in-histogram
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/largest-rectangle-in-histogram/windows/x64/release/rules/modules/cache/4f805c56/leetcode_test.largest_rectangle_in_histogram.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/largest-rectangle-in-histogram/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insufficient_nodes_in_root_to_leaf_paths.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insufficient_nodes_in_root_to_leaf_paths.debugTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.debugTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/debugTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insufficient_nodes_in_root_to_leaf_paths.printTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.debugTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.debugTreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insufficient_nodes_in_root_to_leaf_paths.printTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/printTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.PostOrderTraversal
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.PostOrderTraversal.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/PostOrderTraversal.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.HashTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.HashTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/HashTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.EqualTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.EqualTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/EqualTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.debugTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.debugTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/debugTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.insert_into_a_binary_search_tree.printTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.insert_into_a_binary_search_tree.debugTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.debugTreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.insert_into_a_binary_search_tree.printTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/printTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.implement_trie_prefix_tree.Trie
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/implement-trie-prefix-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/implement-trie-prefix-tree/windows/x64/release/rules/modules/cache/3c3693be/leetcode_test.implement_trie_prefix_tree.Trie.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/implement-trie-prefix-tree/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.frog_jump_ii.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/frog-jump-ii
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.frog_jump_ii.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/frog-jump-ii/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.fibonacci_number.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/fibonacci-number
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.fibonacci_number.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/fibonacci-number/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.design_skiplist.Skiplist
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/design-skiplist
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/design-skiplist/windows/x64/release/rules/modules/cache/57cc73b0/leetcode_test.design_skiplist.Skiplist.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/design-skiplist/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.design_linked_list.MyLinkedList
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/design-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.design_linked_list.MyLinkedList.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/design-linked-list/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.construct_quad_tree.Node
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/construct-quad-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.construct_quad_tree.Node.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/construct-quad-tree/Node.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.construct_quad_tree.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/construct-quad-tree
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.construct_quad_tree.Node=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.construct_quad_tree.Node.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.construct_quad_tree.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/construct-quad-tree/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.complement_of_base_10_integer.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/complement-of-base-10-integer
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/complement-of-base-10-integer/windows/x64/release/rules/modules/cache/111f28b3/leetcode_test.complement_of_base_10_integer.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/complement-of-base-10-integer/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.check_if_it_is_a_good_array.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/check-if-it-is-a-good-array
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.check_if_it_is_a_good_array.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/check-if-it-is-a-good-array/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.calculate_delayed_arrival_time.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/calculate-delayed-arrival-time
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/calculate-delayed-arrival-time/windows/x64/release/rules/modules/cache/6d5e83f0/leetcode_test.calculate_delayed_arrival_time.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/calculate-delayed-arrival-time/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.animal_shelter_lcci.AnimalShelf
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/animal-shelter-lcci
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/animal-shelter-lcci/windows/x64/release/rules/modules/cache/77ed3856/leetcode_test.animal_shelter_lcci.AnimalShelf.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/animal-shelter-lcci/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.add_two_integers.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/add-two-integers
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.add_two_integers.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/add-two-integers/index.ixx.obj
    VERBATIM
)
add_custom_target(target_leetcode-test_35701997
    DEPENDS output_leetcode-test_35701997
)
add_dependencies(leetcode-test target_leetcode-test_35701997)
target_compile_options(leetcode-test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(leetcode-test PRIVATE /EHsc)
else()
    target_compile_options(leetcode-test PRIVATE -fcxx-exceptions)
endif()
set_target_properties(leetcode-test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(leetcode-test PRIVATE cxx_std_20)
if(MSVC)
    set_property(TARGET leetcode-test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(leetcode-test PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/add-two-integers/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/animal-shelter-lcci/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/calculate-delayed-arrival-time/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/check-if-it-is-a-good-array/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/complement-of-base-10-integer/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/construct-quad-tree/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/construct-quad-tree/Node.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/design-linked-list/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/design-skiplist/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/fibonacci-number/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/frog-jump-ii/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/implement-trie-prefix-tree/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/debugTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/EqualTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/HashTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/PostOrderTraversal.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insert-into-a-binary-search-tree/printTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/debugTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/insufficient-nodes-in-root-to-leaf-paths/printTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/largest-rectangle-in-histogram/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/bfsTravelsal.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/freeTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/LeetCodeTreeNodeToString.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/parseLeetCodeBinaryTree.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/serializeTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/traversalTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/leetcode-treenode-cpp/TreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/maximum-sum-with-exactly-k-elements/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/number-complement/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/ransom-note/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list/ArrayToCircularLinkedList.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list/CircularLinkedListToArray.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list/ListNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/split-a-circular-linked-list/TraversalCircularListNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/sum-multiples/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-test/windows/x64/release/valid-perfect-square/index.ixx.obj
)
target_link_options(leetcode-test PRIVATE
    -m64
)
target_sources(leetcode-test PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(leetcode-treenode-cpp STATIC "")
set_target_properties(leetcode-treenode-cpp PROPERTIES OUTPUT_NAME "leetcode-treenode-cpp")
set_target_properties(leetcode-treenode-cpp PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_leetcode-treenode-cpp_3A1F7463
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.TreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-treenode-cpp/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/TreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.traversalTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-treenode-cpp/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.traversalTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/traversalTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.serializeTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-treenode-cpp/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.serializeTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/serializeTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.freeTreeNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-treenode-cpp/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.freeTreeNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/freeTreeNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.parseLeetCodeBinaryTree
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-treenode-cpp/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.freeTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.freeTreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.parseLeetCodeBinaryTree.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/parseLeetCodeBinaryTree.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.bfsTravelsal
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-treenode-cpp/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.bfsTravelsal.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/bfsTravelsal.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_treenode_cpp.LeetCodeTreeNodeToString
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -std=c++20 -fexceptions -fcxx-exceptions -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/leetcode-treenode-cpp/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.bfsTravelsal=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.bfsTravelsal.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.LeetCodeTreeNodeToString.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/LeetCodeTreeNodeToString.ixx.obj
    VERBATIM
)
add_custom_target(target_leetcode-treenode-cpp_3A1F7463
    DEPENDS output_leetcode-treenode-cpp_3A1F7463
)
add_dependencies(leetcode-treenode-cpp target_leetcode-treenode-cpp_3A1F7463)
target_compile_options(leetcode-treenode-cpp PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(leetcode-treenode-cpp PRIVATE /EHsc)
else()
    target_compile_options(leetcode-treenode-cpp PRIVATE -fcxx-exceptions)
endif()
set_target_properties(leetcode-treenode-cpp PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(leetcode-treenode-cpp PRIVATE cxx_std_20)
if(MSVC)
    set_property(TARGET leetcode-treenode-cpp PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(leetcode-treenode-cpp PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/bfsTravelsal.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/freeTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/LeetCodeTreeNodeToString.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/parseLeetCodeBinaryTree.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/serializeTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/traversalTreeNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/leetcode-treenode-cpp/windows/x64/release/leetcode-treenode-cpp/TreeNode.ixx.obj
)
target_link_options(leetcode-treenode-cpp PRIVATE
    -m64
)
target_sources(leetcode-treenode-cpp PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(maximum-sum-with-exactly-k-elements STATIC "")
set_target_properties(maximum-sum-with-exactly-k-elements PROPERTIES OUTPUT_NAME "maximum-sum-with-exactly-k-elements")
set_target_properties(maximum-sum-with-exactly-k-elements PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_maximum-sum-with-exactly-k-elements_DD7262D4
    COMMAND echo [  0%]: compiling.module.release leetcode_test.maximum_sum_with_exactly_k_elements.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/maximum-sum-with-exactly-k-elements/windows/x64/release/maximum-sum-with-exactly-k-elements
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/maximum-sum-with-exactly-k-elements/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.maximum_sum_with_exactly_k_elements.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/maximum-sum-with-exactly-k-elements/windows/x64/release/maximum-sum-with-exactly-k-elements/index.ixx.obj
    VERBATIM
)
add_custom_target(target_maximum-sum-with-exactly-k-elements_DD7262D4
    DEPENDS output_maximum-sum-with-exactly-k-elements_DD7262D4
)
add_dependencies(maximum-sum-with-exactly-k-elements target_maximum-sum-with-exactly-k-elements_DD7262D4)
target_compile_options(maximum-sum-with-exactly-k-elements PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(maximum-sum-with-exactly-k-elements PRIVATE /EHsc)
else()
    target_compile_options(maximum-sum-with-exactly-k-elements PRIVATE -fcxx-exceptions)
endif()
set_target_properties(maximum-sum-with-exactly-k-elements PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(maximum-sum-with-exactly-k-elements PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(maximum-sum-with-exactly-k-elements PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(maximum-sum-with-exactly-k-elements PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(maximum-sum-with-exactly-k-elements PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET maximum-sum-with-exactly-k-elements PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(maximum-sum-with-exactly-k-elements PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/maximum-sum-with-exactly-k-elements/windows/x64/release/maximum-sum-with-exactly-k-elements/index.ixx.obj
)
target_link_options(maximum-sum-with-exactly-k-elements PRIVATE
    -m64
)
target_sources(maximum-sum-with-exactly-k-elements PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(number-complement STATIC "")
set_target_properties(number-complement PROPERTIES OUTPUT_NAME "number-complement")
set_target_properties(number-complement PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_number-complement_B73714DB
    COMMAND echo [  0%]: compiling.module.release leetcode_test.number_complement.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/number-complement/windows/x64/release/number-complement
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/number-complement/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.number_complement.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/number-complement/windows/x64/release/number-complement/index.ixx.obj
    VERBATIM
)
add_custom_target(target_number-complement_B73714DB
    DEPENDS output_number-complement_B73714DB
)
add_dependencies(number-complement target_number-complement_B73714DB)
target_compile_options(number-complement PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(number-complement PRIVATE /EHsc)
else()
    target_compile_options(number-complement PRIVATE -fcxx-exceptions)
endif()
set_target_properties(number-complement PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(number-complement PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(number-complement PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(number-complement PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(number-complement PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET number-complement PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(number-complement PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/number-complement/windows/x64/release/number-complement/index.ixx.obj
)
target_link_options(number-complement PRIVATE
    -m64
)
target_sources(number-complement PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(ransom-note STATIC "")
set_target_properties(ransom-note PROPERTIES OUTPUT_NAME "ransom-note")
set_target_properties(ransom-note PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_ransom-note_D7E2A19A
    COMMAND echo [  0%]: compiling.module.release leetcode_test.ransom_note.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/ransom-note/windows/x64/release/ransom-note
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/ransom-note/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.ransom_note.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/ransom-note/windows/x64/release/ransom-note/index.ixx.obj
    VERBATIM
)
add_custom_target(target_ransom-note_D7E2A19A
    DEPENDS output_ransom-note_D7E2A19A
)
add_dependencies(ransom-note target_ransom-note_D7E2A19A)
target_compile_options(ransom-note PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(ransom-note PRIVATE /EHsc)
else()
    target_compile_options(ransom-note PRIVATE -fcxx-exceptions)
endif()
set_target_properties(ransom-note PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(ransom-note PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(ransom-note PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(ransom-note PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(ransom-note PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET ransom-note PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ransom-note PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/ransom-note/windows/x64/release/ransom-note/index.ixx.obj
)
target_link_options(ransom-note PRIVATE
    -m64
)
target_sources(ransom-note PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_executable(split-a-circular-linked-list-test "")
set_target_properties(split-a-circular-linked-list-test PROPERTIES OUTPUT_NAME "split-a-circular-linked-list-test")
set_target_properties(split-a-circular-linked-list-test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_split-a-circular-linked-list-test_39ED5C9F
    COMMAND echo [  0%]: compiling.module.release leetcode_test.split_a_circular_linked_list.ListNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/split-a-circular-linked-list-test/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list/ListNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.split_a_circular_linked_list.TraversalCircularListNode
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/split-a-circular-linked-list-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.ListNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.TraversalCircularListNode.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list/TraversalCircularListNode.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.split_a_circular_linked_list.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/split-a-circular-linked-list-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.ListNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list/index.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.split_a_circular_linked_list.CircularLinkedListToArray
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/split-a-circular-linked-list-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.ListNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.CircularLinkedListToArray.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list/CircularLinkedListToArray.ixx.obj
    COMMAND echo [  0%]: compiling.module.release leetcode_test.split_a_circular_linked_list.ArrayToCircularLinkedList
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -isystem C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/split-a-circular-linked-list-test/windows/x64/release/rules/modules/cache -fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.ListNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ArrayToCircularLinkedList.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list/ArrayToCircularLinkedList.ixx.obj
    VERBATIM
)
add_custom_target(target_split-a-circular-linked-list-test_39ED5C9F
    DEPENDS output_split-a-circular-linked-list-test_39ED5C9F
)
add_dependencies(split-a-circular-linked-list-test target_split-a-circular-linked-list-test_39ED5C9F)
target_include_directories(split-a-circular-linked-list-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include
)
target_compile_options(split-a-circular-linked-list-test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_source_files_properties(${CMAKE_SOURCE_DIR}/split-a-circular-linked-list/test.cpp PROPERTIES COMPILE_OPTIONS
    "$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.TraversalCircularListNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.TraversalCircularListNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.ListNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ListNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.Solution=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.Solution.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.ArrayToCircularLinkedList=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.ArrayToCircularLinkedList.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_test.split_a_circular_linked_list.CircularLinkedListToArray=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.split_a_circular_linked_list.CircularLinkedListToArray.pcm>"
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(split-a-circular-linked-list-test PRIVATE /EHsc)
else()
    target_compile_options(split-a-circular-linked-list-test PRIVATE -fcxx-exceptions)
endif()
set_target_properties(split-a-circular-linked-list-test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(split-a-circular-linked-list-test PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(split-a-circular-linked-list-test PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(split-a-circular-linked-list-test PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(split-a-circular-linked-list-test PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET split-a-circular-linked-list-test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(split-a-circular-linked-list-test PRIVATE
    gmock
    gtest
    gmock_main
    gtest_main
)
target_link_libraries(split-a-circular-linked-list-test PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list/ArrayToCircularLinkedList.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list/CircularLinkedListToArray.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list/index.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list/ListNode.ixx.obj
    ${CMAKE_SOURCE_DIR}/build/.objs/split-a-circular-linked-list-test/windows/x64/release/split-a-circular-linked-list/TraversalCircularListNode.ixx.obj
)
target_link_directories(split-a-circular-linked-list-test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib/manual-link
)
target_link_options(split-a-circular-linked-list-test PRIVATE
    -m64
)
target_sources(split-a-circular-linked-list-test PRIVATE
    split-a-circular-linked-list/test.cpp
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(sum-multiples STATIC "")
set_target_properties(sum-multiples PROPERTIES OUTPUT_NAME "sum-multiples")
set_target_properties(sum-multiples PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_sum-multiples_5A088631
    COMMAND echo [  0%]: compiling.module.release leetcode_test.sum_multiples.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/sum-multiples/windows/x64/release/sum-multiples
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/sum-multiples/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/sum-multiples/windows/x64/release/rules/modules/cache/c659aa27/leetcode_test.sum_multiples.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/sum-multiples/windows/x64/release/sum-multiples/index.ixx.obj
    VERBATIM
)
add_custom_target(target_sum-multiples_5A088631
    DEPENDS output_sum-multiples_5A088631
)
add_dependencies(sum-multiples target_sum-multiples_5A088631)
target_compile_options(sum-multiples PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(sum-multiples PRIVATE /EHsc)
else()
    target_compile_options(sum-multiples PRIVATE -fcxx-exceptions)
endif()
set_target_properties(sum-multiples PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(sum-multiples PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(sum-multiples PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(sum-multiples PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(sum-multiples PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET sum-multiples PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(sum-multiples PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/sum-multiples/windows/x64/release/sum-multiples/index.ixx.obj
)
target_link_options(sum-multiples PRIVATE
    -m64
)
target_sources(sum-multiples PRIVATE
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_executable(test "")
set_target_properties(test PROPERTIES OUTPUT_NAME "test")
set_target_properties(test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_dependencies(test leetcode-treenode-cpp)
target_include_directories(test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/include
)
target_compile_options(test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_source_files_properties(${CMAKE_SOURCE_DIR}/leetcode-treenode-cpp/test.cpp PROPERTIES COMPILE_OPTIONS
    "$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.parseLeetCodeBinaryTree=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.parseLeetCodeBinaryTree.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.TreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.TreeNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.freeTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.freeTreeNode.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.LeetCodeTreeNodeToString=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.LeetCodeTreeNodeToString.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.bfsTravelsal=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.bfsTravelsal.pcm>;$<$<COMPILE_LANGUAGE:CXX>:-fmodule-file=${CMAKE_SOURCE_DIR}/leetcode_treenode_cpp.serializeTreeNode=build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_treenode_cpp.serializeTreeNode.pcm>"
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(test PRIVATE /EHsc)
else()
    target_compile_options(test PRIVATE -fcxx-exceptions)
endif()
set_target_properties(test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test PRIVATE cxx_std_20)
if(MSVC)
else()
endif()
if(MSVC)
    set_property(TARGET test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test PRIVATE
    cppunit
    leetcode-treenode-cpp
)
target_link_directories(test PRIVATE
    C:/Users/Administrator/Documents/vcpkg-master/installed/x64-windows-static/lib
    build/windows/x64/release
)
target_link_options(test PRIVATE
    -m64
)
target_sources(test PRIVATE
    leetcode-treenode-cpp/test.cpp
)

# target
set(CMAKE_C_COMPILER "C:/Program Files/LLVM/bin/clang")
set(CMAKE_CXX_COMPILER "C:/Program Files/LLVM/bin/clang++")
add_library(valid-perfect-square STATIC "")
set_target_properties(valid-perfect-square PROPERTIES OUTPUT_NAME "valid-perfect-square")
set_target_properties(valid-perfect-square PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_custom_command(OUTPUT output_valid-perfect-square_561A912D
    COMMAND echo [  0%]: compiling.module.release leetcode_test.valid_perfect_square.Solution
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/build/.objs/valid-perfect-square/windows/x64/release/valid-perfect-square
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG
    COMMAND "C:/Program Files/LLVM/bin/clang" -Qunused-arguments -m64 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -std=c++20 -fexceptions -fcxx-exceptions -DNDEBUG -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build/.gens/valid-perfect-square/windows/x64/release/rules/modules/cache -c ${CMAKE_SOURCE_DIR}/build/.gens/leetcode-test/windows/x64/release/rules/modules/cache/f3246e21/leetcode_test.valid_perfect_square.Solution.pcm -o ${CMAKE_SOURCE_DIR}/build/.objs/valid-perfect-square/windows/x64/release/valid-perfect-square/index.ixx.obj
    VERBATIM
)
add_custom_target(target_valid-perfect-square_561A912D
    DEPENDS output_valid-perfect-square_561A912D
)
add_dependencies(valid-perfect-square target_valid-perfect-square_561A912D)
target_compile_options(valid-perfect-square PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
    target_compile_options(valid-perfect-square PRIVATE /EHsc)
else()
    target_compile_options(valid-perfect-square PRIVATE -fcxx-exceptions)
endif()
set_target_properties(valid-perfect-square PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(valid-perfect-square PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(valid-perfect-square PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(valid-perfect-square PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(valid-perfect-square PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET valid-perfect-square PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(valid-perfect-square PRIVATE
    ${CMAKE_SOURCE_DIR}/build/.objs/valid-perfect-square/windows/x64/release/valid-perfect-square/index.ixx.obj
)
target_link_options(valid-perfect-square PRIVATE
    -m64
)
target_sources(valid-perfect-square PRIVATE
)

