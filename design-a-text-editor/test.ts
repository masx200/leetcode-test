import { assertEquals } from "../deps.ts";
import TextEditor from "./index.ts";

Deno.test("design-a-text-editor-1", () => {
    const textEditor = new TextEditor();
    textEditor.addText("leetcode"); // 当前文本为 "leetcode|" 。
    assertEquals(4, textEditor.deleteText(4)); // 返回 4
    // 当前文本为 "leet|" 。
    // 删除了 4 个字符。
    textEditor.addText("practice"); // 当前文本为 "leetpractice|" 。
    assertEquals("etpractice", textEditor.cursorRight(3)); // 返回 "etpractice"
    // 当前文本为 "leetpractice|".
    // 光标无法移动到文本以外，所以无法移动。
    // "etpractice" 是光标左边的 10 个字符。
    assertEquals("leet", textEditor.cursorLeft(8)); // 返回 "leet"
    // 当前文本为 "leet|practice" 。
    // "leet" 是光标左边的 min(10, 4) = 4 个字符。
    assertEquals(4, textEditor.deleteText(10)); // 返回 4
    // 当前文本为 "|practice" 。
    // 只有 4 个字符被删除了。
    assertEquals("", textEditor.cursorLeft(2)); // 返回 ""
    // 当前文本为 "|practice" 。
    // 光标无法移动到文本以外，所以无法移动。
    // "" 是光标左边的 min(10, 0) = 0 个字符。
    assertEquals("practi", textEditor.cursorRight(6));
});

Deno.test("design-a-text-editor-2", () => {
    const targets = [
        "TextEditor",
        "cursorLeft",
        "addText",
        "cursorLeft",
        "addText",
        "cursorRight",
        "addText",
        "addText",
        "addText",
        "deleteText",
        "addText",
        "addText",
        "addText",
        "deleteText",
        "cursorLeft",
        "addText",
        "addText",
        "addText",
        "cursorRight",
        "cursorRight",
        "addText",
        "addText",
        "addText",
        "deleteText",
        "cursorLeft",
        "addText",
        "addText",
        "addText",
        "cursorRight",
        "cursorLeft",
        "addText",
        "deleteText",
        "addText",
        "addText",
        "addText",
        "cursorRight",
        "cursorRight",
        "addText",
        "deleteText",
        "deleteText",
        "addText",
        "addText",
        "addText",
        "deleteText",
        "cursorLeft",
        "addText",
        "addText",
        "cursorLeft",
        "cursorLeft",
        "addText",
        "cursorLeft",
        "deleteText",
        "cursorRight",
        "addText",
        "addText",
        "addText",
        "addText",
        "addText",
        "addText",
        "cursorLeft",
        "deleteText",
        "addText",
        "cursorRight",
        "addText",
        "cursorRight",
        "cursorLeft",
        "addText",
        "cursorRight",
        "cursorRight",
        "cursorRight",
        "cursorRight",
        "addText",
        "cursorLeft",
        "addText",
        "addText",
        "addText",
        "cursorLeft",
        "addText",
        "deleteText",
        "addText",
        "addText",
        "addText",
        "addText",
        "addText",
        "addText",
    ] as const;
    const args = [
        [],
        [14],
        ["soxqep"],
        [7],
        ["rfdrotsyeoy"],
        [19],
        ["htmnn"],
        ["tasaznyhpppw"],
        ["uufybgurb"],
        [1],
        ["nxg"],
        ["f"],
        ["qzsojyx"],
        [6],
        [12],
        ["q"],
        ["lojnjwgzmsitqfpvq"],
        ["zf"],
        [15],
        [3],
        ["cvryepkxlwbi"],
        ["ntwqocajlkakup"],
        ["qcmtlt"],
        [2],
        [15],
        ["ttgbwzbcgqxo"],
        ["hkgjno"],
        ["twhu"],
        [9],
        [20],
        ["crbhkxdkjttg"],
        [14],
        ["qxksfgtysi"],
        ["xuqgs"],
        ["yijleldili"],
        [10],
        [10],
        ["fpyzaswyk"],
        [12],
        [7],
        ["xxyyxg"],
        ["gd"],
        ["vzzapmchhubemjoecr"],
        [5],
        [1],
        ["xthkkvtiazfjz"],
        ["cmebepbuhrmptakzwtc"],
        [16],
        [12],
        ["ato"],
        [4],
        [20],
        [2],
        ["puzgrmxjlbfotdwhjlg"],
        ["pelchmngizalfveyy"],
        ["fdmadvfgykevg"],
        ["rykdhnumyccnlgubrfk"],
        ["chkdhogqrvssiyw"],
        ["ykovueslpte"],
        [8],
        [14],
        ["pzzaagcjkywjwgu"],
        [8],
        ["wjox"],
        [4],
        [3],
        ["qqaayjt"],
        [14],
        [20],
        [11],
        [18],
        ["yykqyxpbeimol"],
        [18],
        ["ihlmvjcnuhnvw"],
        ["nier"],
        ["nfgbrhz"],
        [9],
        ["kskdkidxmry"],
        [3],
        ["vktverslt"],
        ["qpcglsxtlyarcjarwui"],
        ["h"],
        ["hnxwheekfi"],
        ["ibwukjmymifimnhwxsb"],
        ["dbinbmenej"],
    ] as const;
    const results = [
        null,
        "",
        null,
        "",
        null,
        "yeoysoxqep",
        null,
        null,
        null,
        1,
        null,
        null,
        null,
        6,
        "aznyhpppwu",
        null,
        null,
        null,
        "ybgurnxgfq",
        "ybgurnxgfq",
        null,
        null,
        null,
        2,
        "pkxlwbintw",
        null,
        null,
        null,
        "uqocajlkak",
        "tgbwzbcgqx",
        null,
        14,
        null,
        null,
        null,
        "ohkgjnotwh",
        "uqocajlkak",
        null,
        12,
        7,
        null,
        null,
        null,
        5,
        "zapmchhube",
        null,
        null,
        "tiazfjzcme",
        "chhubexthk",
        null,
        "mchhubexth",
        20,
        "notwhxxyka",
        null,
        null,
        null,
        null,
        null,
        null,
        "rvssiywyko",
        14,
        null,
        "guvueslpte",
        null,
        "tewjoxtokv",
        "slptewjoxt",
        null,
        "iazfjzcmeb",
        "kzwtcmupqc",
        "wtcmupqcmt",
        "wtcmupqcmt",
        null,
        "ptakzwtcmu",
        null,
        null,
        null,
        "jcnuhnvwni",
        null,
        3,
        null,
        null,
        null,
        null,
        null,
        null,
    ] as const;

    const textEditor = new TextEditor(...args[0]);

    for (let i = 1; i < args.length; i++) {
        const arg = args[i];
        const result = results[i];
        const target = targets[i];
        const ans = Reflect.apply(
            Reflect.get(textEditor, target),
            textEditor,
            arg,
        );
        if (result !== null) {
            assertEquals(ans, result);
        }
    }
});
