name: udd-update-dependencies

on:
  workflow_dispatch:
  schedule:
    - cron: "42 19 * * *"
  push:
    branches: [ "master" ]
jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 16
      - run: |
          wget https://github.com/masx200/clang-formatter/releases/download/Continuous-integration-872a21f072385aa2f4035176711aeba263a27ca0/clang-formatter_Linux_x86_64.tar.gz
          mkdir -p -v ./temp/clang-formatter
          tar zxvf ./clang-formatter_Linux_x86_64.tar.gz -C ./temp/clang-formatter
          #ls ./temp/clang-formatter -l
      - name: clang-formatter
        continue-on-error: true
        run: ./temp/clang-formatter/clang-formatter
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.3

      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.32.5
      - run: deno fmt
      
      - run: go fmt ./...

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven
     
     
      - run: wget -O ktlint.jar https://github.com/pinterest/ktlint/releases/download/0.49.0/ktlint
      
      
      - name: ktlint
        continue-on-error: true
        run: java --add-opens=java.base/java.lang=ALL-UNNAMED -jar "./ktlint.jar" -F
        
      - name: Update dependencies
        
        run: deno run -A https://deno.land/x/udd/main.ts deps.ts *.ts '*/*.ts'  '*.json'
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        id: pr
        with:
          commit-message: "Update dependencies"
          title: Update dependencies
          body: >
            Dependencies updated by [udd](https://github.com/hayd/deno-udd).
          branch: deno-dependency-updates
          author: GitHub <noreply@github.com>
          delete-branch: true
      - name: Retrieve commit sha
        id: commit
        run: |
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: Set commit status with pending
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: "Basic tests"
          state: "pending"
          sha: ${{ steps.commit.outputs.sha }}
      - name: Basic tests
        id: test
        continue-on-error: true
        run: |
          go test ./... -v
          deno task test
          mvn test --file pom.xml
      - name: Set commit status with outcome
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: "Basic tests"
          description: "To run other CI actions close/reopen this PR"
          state: ${{ steps.test.outcome }}
          sha: ${{ steps.commit.outputs.sha }}
